# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W-bu0-_Ft2IDD3S2zcG7g9wRQAnlTuMZ

#Dataframe
##1. columnas (features - caracteristicas)
##2. Filas (registros)
"""

import numpy as np
import pandas as pd

#convertir de lista a dataframe

ventas = pd.Series([22,15,7])
ventas

ventas=pd.Series([22,15,70], index=["Enero", "Febrero", "Marzo"]) #Asociar los números de ventas con un mes
ventas

# Para conocer las ventas de enero
ventas["Enero"]

ventas.dtype

ventas.index

#para conocer valores de feature
ventas.values



#nombrar el index
ventas.name= "Ventas del 2025"
ventas
#categorizar el index
ventas.index.name="Meses"
ventas

ventas.shape

"""## Conversión de diccionarios a dataframe

###Diccionarios
1. no tienen identación
2. poseen clave única,y un valor asociado con la clave
3. son mutables
"""

diccionario = {"Enero":22, "Febrero":15, "Marzo":70}
type(diccionario)

# diccionario a dataframe

ventas_1=pd.Series(diccionario) #no olvidar la mayúscula en 'Series' malditasea
ventas_1

Rigel = pd.Series(diccionario, index = ["Enero", "Febrero", "Marzo", "Abril"])
Rigel

medidas = pd.DataFrame(
            {"Humedad":[41,22,30,80],
             "Salinidad":[22,15,30,80],
              "Sensórica": ["si", "no", "no", "no"],
              "Acidez": ["alta", "media", "baja", "mbaja"],
              "PH": [1,7,14,13]},
            index = ["La Bachata", "La salsa" , "El merengue", "El vallenato"]
           )
medidas

medidas.index.name="mata"
medidas
medidas.Humedad

medidas.Humedad, medidas.Salinidad #lo mismo que lo de abajo pero mas feo
medidas.dtypes #conocer tipo de objeto

medidas[["Humedad", "Salinidad"]] # Se utiliza para segmentar las listas

medidas.axes #muestra nombres de filas y columnas

medidas.values

medidas.shape #longitud de la lista

"""###Ejercicios
Dados los siguientes diccionarios, convertirlos en datagramas y usar todos los métodos aprendidos:

```
elementos={"número atómico":[1,6,47,88],
"Masa atómica":[1,12,107,226],
"Familia":["No metal","No metal","Metal","Metal"]}
```
Agregar como registros el nombre de los elementos

2. Convertir en dataframe el siguiente conjunto de medidas
```
medida_2020={"Ag":2,"Au":5,"Cu":3,"Pt":2}
medida_2021={"Ag":4,"Au":3,"Cu":6,"Pt":1}
medida_2022={"Ag":8,"Au":2,"Cu":15,"Pt":0}
medida_2023={"Ag":5,"Au":1,"Cu":0,"Pt":5}
medida_2024={"Ag":7,"Au":0,"Cu":3,"Pt":2}
medida_20205={"Ag":9,"Au":1,"Cu":3,"Pt":5}
```
Tenga en cuenta que los registros son los meses de medida y las features deben ser los elementos
"""

elementos=pd.DataFrame(
            {"número_atómico":[1,6,47,88],
             "Masa_atómica":[1,12,107,226],
             "Familia":["No metal","No metal","Metal","Metal"]},
            index = ["H","C","Ag","Pt"])
elementos

elementos.index.name = "tipo_elemento"
elementos
elementos.número_atómico

elementos[["número_atómico", "Masa_atómica"]]

elementos.axes

elementos.values

elementos.shape

medida = pd.DataFrame(
        {"medida_2020":{"Ag":2,"Au":5,"Cu":3,"Pt":2},
         "medida_2021":{"Ag":4,"Au":3,"Cu":6,"Pt":1},
         "medida_2022":{"Ag":8,"Au":2,"Cu":15,"Pt":0},
         "medida_2023":{"Ag":5,"Au":1,"Cu":0,"Pt":5},
         "medida_2024":{"Ag":7,"Au":0,"Cu":3,"Pt":2},
         "medida_20205":{"Ag":9,"Au":1,"Cu":3,"Pt":5}},
        index = ["Ag", "Au", "Cu", "Pt"]
)
medida

medida.index.name = "elemento"
medida
medida.medida_2020

medida[["medida_2020", "medida_2021"]]

medida.values

medida.medida_2020 , medida.medida_2021
medida.dtypes

medida.shape

medida.axes